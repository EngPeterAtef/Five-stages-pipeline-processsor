vlog processor.v
vsim work.Processor

add wave -position insertpoint  \
sim:/Processor/clk

# show internal registers
add wave -position insertpoint  \
sim:/Processor/registers/regFile

# show data memory 
add wave -position insertpoint  \
sim:/Processor/memory_stage/mem/dataMem



# cycle 1 
add wave -position insertpoint  \
sim:/Processor/Fetch/PC
add wave -position insertpoint  \
sim:/Processor/Fetch/dataFromMemoryWire
add wave -position insertpoint  \
sim:/Processor/Rd \
sim:/Processor/Rs \
sim:/Processor/opCode

# cycle 2 
add wave -position insertpoint  \
sim:/Processor/control_signals

# cycle 3 
add wave -position insertpoint  \
sim:/Processor/control_signals_execute
add wave -position insertpoint  \
sim:/Processor/ALU_Result

# cycle 4
add wave -position insertpoint  \
sim:/Processor/ALU_result_mem


# cycle 5
add wave -position insertpoint  \
sim:/Processor/registers/write_addr
add wave -position insertpoint  \
sim:/Processor/registers/write_data


# signals
add wave -position insertpoint  \
sim:/Processor/registers/write_enable
add wave -position insertpoint  \
sim:/Processor/memory_stage/mem/write



force -freeze sim:/Processor/clk 1 0, 0 {25 ps} -r 50

#force -freeze sim:/Processor/Decode/Rs_data 0000000000000111 0
#force -freeze sim:/Processor/Decode/Rd_data 0000000000010110 0
run


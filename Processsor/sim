vlog processor.v
vsim work.Processor

add wave -position insertpoint  \
sim:/Processor/clk
add wave -position insertpoint  \
sim:/Processor/RESET

# show internal registers
add wave -position insertpoint  \
sim:/Processor/registers/regFile

# show flag register
add wave -position insertpoint  \
sim:/Processor/CCR

# show data memory 
add wave -position insertpoint  \
sim:/Processor/memory_stage/mem/dataMem

# PC and SP
add wave -position insertpoint  \
sim:/Processor/Fetch/PC
add wave -position insertpoint  \
sim:/Processor/memory_stage/sp

# cycle 1 
add wave -position insertpoint  \
sim:/Processor/Fetch/dataFromMemoryWire

# cycle 2 
add wave -position insertpoint  \
sim:/Processor/control_signals

# cycle 3 
add wave -position insertpoint  \
sim:/Processor/ALU_Result

# cycle 4
add wave -position insertpoint  \
sim:/Processor/ALU_result_mem


# cycle 5
add wave -position insertpoint  \
sim:/Processor/registers/write_data
add wave -position insertpoint  \
sim:/Processor/WriteBack/dataFromMemory

# signals
add wave -position insertpoint  \
sim:/Processor/registers/write_enable
add wave -position insertpoint  \
sim:/Processor/memory_stage/mem/write \
sim:/Processor/memory_stage/mem/read
add wave -position insertpoint  \
sim:/Processor/Fetch/enable
add wave -position insertpoint  \
sim:/Processor/branchResult
add wave -position insertpoint  \
sim:/Processor/unconditionalJump
add wave -position insertpoint  \
sim:/Processor/dst

force -freeze sim:/Processor/clk 1 0, 0 {25 ps} -r 50
force -freeze sim:/Processor/RESET 1 0
run
force -freeze sim:/Processor/RESET 0 1
run
run
run
run
run
run
run
run
run
run
run
run
run
